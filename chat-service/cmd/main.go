package main

import (
	"chat-service/database"
	"chat-service/external"
	"chat-service/migrations"
	"chat-service/routes"
	"fmt"
	"log"
	"os"

	"github.com/gin-contrib/cors"
	"github.com/gin-gonic/gin"
	"github.com/joho/godotenv"
)

func init() {
	err := godotenv.Load()
	if err != nil {
		log.Println("‚ö†Ô∏è  .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
	}
}


func main() {
	// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
	database.ConnectMongo()

	// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL
	if err := external.ConnectAuthDB(); err != nil {
		log.Fatalf("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ auth-db: %v", err)
	}

	// –ú–∏–≥—Ä–∞—Ü–∏–∏ MongoDB
	migrations.Run()

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞
	r := gin.Default()

	// ‚úÖ CORS –¥–æ–ª–∂–µ–Ω –∏–¥—Ç–∏ –¥–æ SetupRoutes
	r.Use(cors.New(cors.Config{
		AllowOrigins:     []string{"http://localhost:3000"},
		AllowMethods:     []string{"GET", "POST", "PUT", "DELETE", "OPTIONS"},
		AllowHeaders:     []string{"Origin", "Content-Type", "Authorization"},
		AllowCredentials: true,
	}))

	// –ú–∞—Ä—à—Ä—É—Ç—ã
	routes.SetupRoutes(r)

	// –°—Ç–∞—Ä—Ç
	port := os.Getenv("PORT")
	if port == "" {
		port = "8081"
	}

	fmt.Printf("üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:%s\n", port)
	if err := r.Run(":" + port); err != nil {
		log.Fatalf("–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: %v", err)
	}
}
